{
	/*
		// Place your snippets for C++ here. Each snippet is defined under a snippet name and has a prefix, body and 
		// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
		// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
		// same ids are connected.
		// Example:
		"Print to console": {
			"prefix": "log",
			"body": [
				"console.log('$1');",
				"$2"
			],
			"description": "Log output to console"
		}
	*/
	"Printf C": {
		"prefix": "printf",
		"body": [
			"printf(\"\\n $1 ${2:%d }\");$0"
		],
		"description": "Output string C"
	},
	"scanf C": {
		"prefix": "scanf",
		"body": [
			"${1:printf(\"\\n $2 \");\t}scanf(\"%${3:d}\",&$4);$0"
		],
		"description": "Input code C"
	},
	"fflush C": {
		"prefix": "fflush",
		"body": [
			"fflush(stdin);$0"
		],
		"description": "delete Cache C"
	},
	"gets C": {
		"prefix": "gets",
		"body": [
			"fflush(stdin);",
			"gets( $1 );$0"
		],
		"description": "print string C"
	},
	"Pause": {
		"prefix": "pause",
		"body": [
			"system(\"pause\");"
		],
		"description": "pause system iostream"
	},
	"endl": {
		"prefix": "endl",
		"body": [
			"cout << endl;$0"
		],
		"description": "end line"
	},
	"Typdef Struct": {
		"prefix": "typedef-struct",
		"body": [
			"typedef struct ${1:myName} {",
			"\t${3://code}",
			"}${2:defineStruct};$0"
		],
		"description": "typedef struct"
	},
	"using namespace std": {
		"prefix": "using-namespace",
		"body": [
			"using namespace std;$0"
		],
		"description": "using namespace using namespace"
	},
	"cout My": {
		"prefix": "cout, MySnippets",
		"body": [
			"cout << \"${1:comment} \";$0"
		],
		"description": "cout << \"comment \\n\" "
	},
	"define border bottom":{
		"prefix": "define-border-bottom",
		"body": [
			"#define BB cout << \"\\n---------------\\n\""
		],
		"description": "cout \"--------------------\""
	}
}